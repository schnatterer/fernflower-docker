#!/bin/bash
set -ex

# Don't use docker cloud build's IMAGE_NAME, because it already contains the tag latest.
IMAGE_NAME=schnatterer/fernflower

function main() {

    init

    build 'graalvm-19-native'
    tag 'graalvm-19-native' 'latest'
    tag 'graalvm-19-native' 'native'
    tag 'graalvm-19-native' "${GIT_SHA1_SHORT}"

    build 'jdk8-alpine-jre'
    tag 'jdk8-alpine-jre' 'alpine-jre'
    tag 'jdk8-alpine-jre' "${GIT_SHA1_SHORT}-alpine-jre"

    rm -rf fernflower
}

function init() {
    rm -rf fernflower

    git clean -fd
    git clone https://github.com/fesh0r/fernflower

    GIT_SHA1=$(cd fernflower && git rev-parse HEAD)
    GIT_SHA1_SHORT=$(cd fernflower && git rev-parse --short HEAD)

    GIT_TAG=GIT_SHA1
    POTENTIAL_TAG=$(git name-rev --name-only --tags HEAD)
    if [ "${POTENTIAL_TAG}" != "undefined" ]; then
        GIT_TAG="${POTENTIAL_TAG}"
    fi

    cd fernflower
}

function build() {
    local TAG="$1"

    cp -f ../${TAG}/Dockerfile .
    docker image build \
        --build-arg VCS_REF="${GIT_SHA1}" \
        --build-arg SOURCE_REPOSITORY_URL="${SOURCE_REPOSITORY_URL}" \
        --build-arg GIT_TAG="${GIT_TAG}" \
        --build-arg BUILD_DATE="$(date --rfc-3339 ns)" \
        --tag ${IMAGE_NAME}:${TAG}-${GIT_SHA1_SHORT} \
        .

     docker push ${IMAGE_NAME}:${TAG}-${GIT_SHA1_SHORT}
}

function tag() {
   local SRC="$1"
   local TARGET="$2"
   docker tag ${IMAGE_NAME}:${SRC}-${GIT_SHA1_SHORT} ${IMAGE_NAME}:${TARGET}
   docker push ${IMAGE_NAME}:${TARGET}
}

main "$@"